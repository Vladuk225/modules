import asyncio
import random
from bot import bot
from aiogram import types, Dispatcher
from commands.db import conn, cursor, url_name, get_balance
from assets.transform import transform_int as tr
from commands.games.db import gametime
from commands.main import win_luser
from assets.antispam import antispam
from decimal import Decimal
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from commands.help import CONFIG


"""
MODULE Vilin
By Vladuk(@Vladislav_225)
Please subscribe to channel!!!
@gamechat225
@bisnessbotlive
"""


CONFIG['help_game'] += '\n‚úÖ‚ùå –í–∏–ª–∏–Ω'


async def upd_balance(uid, summ, type):
    balance = cursor.execute('SELECT balance FROM users WHERE user_id = ?', (uid,)).fetchone()[0]
    if type == "win":
        summ = Decimal(balance) + Decimal(summ)
    else:
        summ = Decimal(balance) - Decimal(summ)

    cursor.execute(f"UPDATE users SET balance = ? WHERE user_id = ?", (str(summ), uid))
    cursor.execute(f"UPDATE users SET games = games + 1 WHERE user_id = ?", (uid,))
    conn.commit()


@antispam
async def vilin(message: types.Message):
    uid = message.from_user.id
    rwin, rloser = await win_luser()
    balance = await get_balance(uid)
    url = await url_name(uid)

    try:
        if message.text.lower().split()[1] in ['–≤—Å–µ', '–≤—Å—ë']:
            summ = balance
        else:
            summ = message.text.split()[1].replace('–µ', 'e')
            summ = int(float(summ))
    except:
        await message.answer(f'{url}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è —Å—Ç–∞–≤–∫–∏. {rloser} üßê')
        return

    gt = await gametime(uid)
    if gt == 1:
        await message.answer(f'{url}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–æ–π. {rloser} ‚è≥')
        return

    if summ < 100:
        await message.answer(f'{url}, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ‚Äî 100 –º–æ–Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, {rloser}. üí∞')
        return

    if balance < summ:
        await message.answer(f'{url}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. {rloser} üí∏')
        return

    markup = InlineKeyboardMarkup(resize_keyboard=True)
    yes = InlineKeyboardButton(text='üéØ –î–∞, –∏–≥—Ä–∞—é!', callback_data=f'yes_{uid}_{summ}')
    no = InlineKeyboardButton(text='‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞', callback_data=f'no_{uid}')
    markup.add(yes, no)
    
    await message.answer(f'''
üéÆ <b>–ì–æ—Ç–æ–≤—ã —Å—ã–≥—Ä–∞—Ç—å –≤ "–í–∏–ª–∏–Ω"?</b>
–°—Ç–∞–≤–∫–∞: <b>{summ} –º–æ–Ω–µ—Ç</b>
    
–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ "–î–∞", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –∏–ª–∏ "–ù–µ—Ç" –¥–ª—è –æ—Ç–º–µ–Ω—ã. 
''', reply_markup=markup, parse_mode='HTML')


async def callback_vilin_yes(callback: types.CallbackQuery):
    data = callback.data.split('_')
    owner_button = int(float(data[1]))
    summ = int(float(data[2]))

    if callback.from_user.id == owner_button:
        chance = random.random()

        if chance < 0.45:
            su = int(summ * 0.5)
            txt = f'üéâ –£–¥–∞—á–∞ –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ <b>{su} –º–æ–Ω–µ—Ç!</b> ü§ë'
            await upd_balance(owner_button, su, 'win')
        elif chance < 0.50:
            txt = 'ü§∑‚Äç‚ôÇÔ∏è –ù–∏—á—å—è! –í—ã –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –∏ –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.'
        else:
            txt = f'üòî –£–≤—ã, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ <b>{summ} –º–æ–Ω–µ—Ç</b>. –ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å –∏ —É–¥–∞—á–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ª—ã–±–Ω–µ—Ç—Å—è!'
            await upd_balance(owner_button, summ, 'lose')

        await asyncio.sleep(2)
        await callback.message.edit_text(text=txt, parse_mode='HTML')
    else:
        await callback.answer('–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å! üéÆ')


async def callback_vilin_no(callback: types.CallbackQuery):
    owner_button = int(callback.data.split('_')[1])

    if callback.from_user.id == owner_button:
        txt = 'üö´ –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã! ‚úî'
        await callback.message.edit_text(text=txt)
    else:
        await callback.answer('–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å! üéÆ')


def register_handlers(dp: Dispatcher):
    dp.register_message_handler(vilin, lambda message: message.text.lower().startswith('–≤–∏–ª–∏–Ω'))
    dp.register_callback_query_handler(callback_vilin_yes, lambda callback: callback.data.startswith("yes_"))
    dp.register_callback_query_handler(callback_vilin_no, lambda callback: callback.data.startswith("no_"))
	

MODULE_DESCRIPTION = {
	'name': '‚úÖ‚ùå –í–∏–ª–∏–Ω',
	'description': '–ù–æ–≤–∞—è –∏–≥—Ä–∞ "–≤–∏–ª–∏–Ω"'
}
